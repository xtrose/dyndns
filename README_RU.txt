xtrose Media Studio
Автор: Моисей Ривера
Веб: https://xtrose.com
Почта: media.studio@xtrose.com 



С xtrose DynDNS вы получаете простое бесплатное решение DynDns без внешних поставщиков и скрытых затрат.
Требуемый онлайн-сервер может создавать бесконечное количество поддоменов для динамических IP-адресов.
Используемый метод прост в реализации.
Для клиентских серверов, серверов с динамическим IP-адресом, простое задание cron настраивается с помощью cron, который через регулярные промежутки времени отправляет простой запрос curl на веб-сервер.
Веб-сервер, который получает запрос curl с помощью сценария PHP, проверяет, изменился ли IP-адрес клиентского сервера, и создает новые файлы конфигурации Apache.
Другое задание cron на веб-сервере проверяет наличие новых файлов конфигурации Apache, копирует их в каталог конфигурации Apache и перезапускает приложение Apache.
С помощью всего нескольких скриптов и простой настройки вы можете быстро создать свой собственный сервер DynDNS.



Нужный:
- Клиентский сервер - Дома (Linux)
- Веб-сервер - Онлайн (Linux)

Обязательно (клиент-сервер):
- права sudo
- cron

Обязательно (веб-сервер):
- права sudo
- cron
- letsencrypt
- apache2 (веб-сервер)
- PHP
- Всеобщее достояние




Клонировать или скачать файлы
Загрузите или клонируйте файлы репозитория GIT на свой компьютер:
$ git clone "https://github.com/xtrose/dyndns.git"



Создайте поддомен для своего веб-сервера
Сначала вам понадобится субдомен на вашем веб-сервере, который позже будет содержать скрипт PHP для обработки клиентских запросов.
Если вы еще не знакомы с Apache, вы можете использовать файлы из каталога Files и соответствующим образом адаптировать их.
Скопируйте файлы для этого в другой каталог, так как они потребуются позже без изменений.

Замените поля в квадратных скобках в файлах следующим образом:
- [SERVERADMIN] -> Электронный адрес администратора сервера.
- [SUBDOMAIN] -> Поддомен, который запускается для клиентского сервера.
- [DOMAIN] -> Общедоступный домен, под которым можно получить доступ к веб-серверу.

Удалите следующие строки из файла apache-le-ssl.conf и замените их:
Файлы предназначены для обратного прокси на IP.
Для сценария веб-сервера файл должен быть адаптирован так, чтобы его можно было вызывать в каталоге документов.
Замените [MY_PATH] реальным путем, к которому может получить доступ ваш сервер Apache.

Удалять:
SSLProxyEngine включен
ProxyPass / http://[IP]/
ProxyPassReverse / http://[IP]/

Вставлять:
DocumentRoot /var/www/[MY_PATH]/

Переименуйте 2 файла следующим образом:
apache.conf -> [MY_SUBDOMAIN].conf
apache-le-ssl.conf -> [MY_SUBDOMAIN] -le-ssl.conf

Скопируйте два файла, которые вы создали, в каталог конфигурации apache на вашем веб-сервере:
Убедитесь, что у вас есть root права.
/etc/apache2/sites-enabled/

Создайте каталог документов на своем веб-сервере, как вы настроили его в файле apache-le-ssl.conf, и назначьте права пользователю apache:
$ sudo chown www-data: www-data /var/www/[MY_PATH]/

Перезапустите приложение apache2:
$ sudo service apache2 перезапуск

Создайте сертификат Letsencrypt для вновь созданного поддомена:
Замените поля в квадратных скобках данными вашего поддомена и домена в команде.
$ certbot certonly -d [SUBDOMAIN].[DOMAIN] -d www. [SUBDOMAIN].[DOMAIN] --apache --renew-по умолчанию

Откройте скопированный файл [MY_SUBDOMAIN] -le-ssl.conf в каталоге Apache и удалите # из следующих строк:
Обратите внимание, что для этого вам понадобятся root права.
Запишите путь к сертификату letsencrypt и адаптируйте его к пути к созданному сертификату.
# Включить /etc/letsencrypt/options-ssl-apache.conf
# SSLCertificateFile /etc
# SSLCertificateKeyFile /etc/letsencrypt/live/[DOMAIN]

Перезапустите приложение apache2:
$ sudo service apache2 перезапуск

Теперь вы создали поддомен для своего сервера, который должен быть доступен извне.
Все запросы к поддомену будут выполняться приложением в настроенном каталоге документов.
Все HTTP-запросы перенаправляются на https.
Обратите внимание, что сертификат letsencrypt необходимо обновлять каждые 3 месяца.
Вы можете автоматизировать это позже, используя cron.




Настройте файлы xtrose DynDNS
Откройте файл index.php из загруженного репозитория GIT и измените записи в разделе «// Config.» следующим образом:
MY_SECRET -> Безопасный пароль
MY_DOMAIN.COM -> Публичный домен вашего веб-сервера (example.com)
MY_EMAIL_ADDRESS -> Электронный адрес администратора сервера (mail@example.com)
BLACKLISTED_SUBDOMAIN -> Введите все поддомены, для которых не может быть построена пересылка DynDNS, включая те, которые управляют сценарием.
Если у вас есть другие поддомены для других сайтов или перенаправления, которые не изменились
